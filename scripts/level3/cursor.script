
function init(self)

	-- Input Focus is acquired for the cursor
	msg.post(".", "acquire_input_focus")

	-- Initialize the script property which controls which shape will be spawned
	-- Initialize the Count properties for both crates and triangles
	self.shape = 'crate'
	self.crateCount = 0
	self.triangleCount = 0

end	


-- ------------------------------------------------------------------------------------------

function update(self, dt)

	-- The updated cursor location is captured and displayed within its label component	
	local pos = go.get_position()
	label.set_text("#cursorLabel", "---- x: " .. pos.x .. "  y: " .. pos.y)

	-- User Instructions and Counter Tallies are displayed on the screen using 'draw_text'
	msg.post("@render:", "draw_text", 
	{ text = "Click to release a new Crate into the game at the current cursor location.", 
	position = vmath.vector3(50, 730, 0) } )
	msg.post("@render:", "draw_text", 
	{ text = "Total Crates Released from Cursor Position: " .. self.crateCount, 
	position = vmath.vector3(50, 710, 0) } )
	msg.post("@render:", "draw_text", 
	{ text = "Total Crates Deleted after hitting Floor: " .. crateHitFloor, 
	position = vmath.vector3(50, 690, 0) } )
	msg.post("@render:", "draw_text", 
	{ text = "Next Shape: " .. self.shape, 
	position = vmath.vector3(50, 670, 0) } )

end

-- ------------------------------------------------------------------------------------------

function on_input(self, action_id, action)

	-- Each frame - update the Defold cursor Game Object position to be the same as the 
	-- current position of the machine cursor
	go.set_position(vmath.vector3(action.x-512, action.y-384, 0))

	-- When the user clicks the mouse button/touches screen, spawn a new crate at that location
	if action.pressed then
		local cursorPos = go.get_position()
		print("Current Shape ".. self.shape)

		-- Spawn the next Game Object - alternating between crates and triangles		
		if self.shape == 'crate' then
			factory.create("/createCrates#factory", cursorPos, nil, {}, 1.0)
			self.crateCount = self.crateCount + 1	
			self.shape = 'triangle'

		elseif self.shape == 'triangle' then
			factory.create("/createTriangleCrates#factory", cursorPos, nil, {}, 1.0)
			self.triangleCount = self.triangleCount + 1
			self.shape = 'crate'
		end

	end

end
